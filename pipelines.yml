resources:      
  - name: buildInfo
    type: buildInfo
    version:
      buildName: native_pipeline
      buildNumber: 8
      targetRepo: docker-local
      
  - name: aql
    type: aql
    version:
      query: 'items.find({"$and":[{"artifact.module.build.name":{"$eq":"native_pipeline"}},{"artifact.module.build.number":{"$eq":"8"}}]})'     
      addedProperties:
        FOO: "value1a value1b"
        BAR: "value2a value2b"
      mappings:
        mapping0:
          input: "regex"
          output: "$1/$2"
        mapping2:
          input: "regex"
          output: "$2/$1"

pipelines:
  - name: ankul_pipeline
    steps:
      - name: bundle
        type: CreateReleaseBundle
        configuration:
          affinityGroup: test
          nodePool: ankul_nodes
          releaseBundleName: test_2
          releaseBundleVersion: v1.1.3
          dryRun: false
          signed: true
          description: "some random test description"
          releaseNotes:
            syntax: markdown
            content: |
              ## Heading
              small description about what this release has
                * Bullet
                * Points
        execution:
          onComplete:
            - cat $STEP_TMP_DIR/createReleaseBundlePayload.json
#             - |
#               payload='{}'
#               echo $payload | jq .
#               echo -e "\npayload above"
#               releaseNotesContent=$(jq -r ".step.configuration.releaseNotes.content" $STEP_JSON_PATH)
#               if [ ! -z "$releaseNotesContent" ] && [ "$releaseNotesContent" != "null" ]; then
#                 releaseNotes='{}'
#                 releaseNotes=$(echo $releaseNotes | jq --arg content "$releaseNotesContent" '. + {content: $content}')
#                 echo $releaseNotes | jq .
#                 echo -e "\nafter_content"
#                 releaseNotesSyntax=$(jq -r ".step.configuration.releaseNotes.syntax" $STEP_JSON_PATH)
#                 if [ ! -z "$releaseNotesSyntax" ] && [ "$releaseNotesSyntax" != "null" ]; then
#                   releaseNotes=$(echo $releaseNotes | jq --arg syntax "$releaseNotesSyntax" '. + {syntax: $syntax}')
#                   echo $releaseNotes | jq .
#                   echo -e "\nafter_syntax"
#                 fi
#                 payload=$(echo $payload | jq --argjson json "$releaseNotes" '.release_notes = $json')
#                 echo $payload | jq .
#               fi
        requires:
          integrations:
            - ankul_artifactory         
        triggeredBy:
          resources:
            - aql
